{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Lee\\\\Documents\\\\GitHub\\\\andrelee.dev\\\\webpage\\\\src\\\\components\\\\Featured.js\";\nimport './Item.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\nimport asset from './assets/item-assets/billiam-demo.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Featured = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"med-size\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        src: asset,\n        alt: \"Snippet\",\n        className: \"img-custom\",\n        autoPlay: true,\n        loop: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"billiam fakespeare \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Natural language processing model that is trained on 40,000 lines of Shakespearean text to generate responses to user input. The model uses TF-IDF to vectorize the input and then uses cosine similarity to generate the response.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }, this), \"A very simple model but served as the catalyst for me learning more complex topics and techniques!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          href: \"https://github.com/joselclee/chatbot\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), \" Python Code\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Featured;\nexport default Featured;\nvar _c;\n$RefreshReg$(_c, \"Featured\");","map":{"version":3,"names":["Card","Button","FontAwesomeIcon","faCode","asset","jsxDEV","_jsxDEV","Featured","className","children","src","alt","autoPlay","loop","muted","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","variant","href","icon","_c","$RefreshReg$"],"sources":["C:/Users/Jose Lee/Documents/GitHub/andrelee.dev/webpage/src/components/Featured.js"],"sourcesContent":["import './Item.css'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport asset from './assets/item-assets/billiam-demo.mp4';\r\n\r\nconst Featured = () => {\r\n  return (\r\n    <div className=\"med-size\">\r\n      <Card>\r\n      <video src={asset} alt=\"Snippet\" className=\"img-custom\" autoPlay loop muted />\r\n          <Card.Body>\r\n            <Card.Title>billiam fakespeare </Card.Title>\r\n            <Card.Text>\r\n              Natural language processing model that is trained on 40,000 lines of Shakespearean text to generate \r\n              responses to user input. The model uses TF-IDF to vectorize the input and then uses cosine similarity\r\n              to generate the response.\r\n              <br/><br/>\r\n              A very simple model but served as the catalyst for me learning more complex topics and techniques!\r\n            </Card.Text>\r\n            <Button variant=\"secondary\" href=\"https://github.com/joselclee/chatbot\">\r\n              <FontAwesomeIcon icon={faCode}/> Python Code\r\n            </Button>\r\n          </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Featured"],"mappings":";AAAA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAE1D,OAAOC,KAAK,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA;IAAKE,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBH,OAAA,CAACN,IAAI;MAAAS,QAAA,gBACLH,OAAA;QAAOI,GAAG,EAAEN,KAAM;QAACO,GAAG,EAAC,SAAS;QAACH,SAAS,EAAC,YAAY;QAACI,QAAQ;QAACC,IAAI;QAACC,KAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1EZ,OAAA,CAACN,IAAI,CAACmB,IAAI;QAAAV,QAAA,gBACRH,OAAA,CAACN,IAAI,CAACoB,KAAK;UAAAX,QAAA,EAAC;QAAmB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5CZ,OAAA,CAACN,IAAI,CAACqB,IAAI;UAAAZ,QAAA,GAAC,qOAIT,eAAAH,OAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAAAZ,OAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,sGAEZ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACZZ,OAAA,CAACL,MAAM;UAACqB,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,sCAAsC;UAAAd,QAAA,gBACrEH,OAAA,CAACJ,eAAe;YAACsB,IAAI,EAAErB;UAAO;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,gBAClC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAO,EAAA,GArBKlB,QAAQ;AAuBd,eAAeA,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}